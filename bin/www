
const http = require('http');
const app = require('../app');
const debug = require('debug')('porfolio-cucchietti:server');

const port = normalizePort(process.env.PORT || '4000');
//const port = process.env.port || 5000; 

app.set('port', port);
// server.listen(port, '0.0.0.0', () => {
  //   console.log(`Servidor escuchando en el puerto ${port}`);
  // });
  const server = http.createServer(app);
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);



function normalizePort(val) {
  const port = parseInt(val, 10);
  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'port ' + port;
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}











